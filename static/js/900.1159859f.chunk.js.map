{"version":3,"file":"static/js/900.1159859f.chunk.js","mappings":"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","sources":["api.js","pages/home/home.styled.js","pages/movie-id/movie-id.styled.js","pages/movie-id/movie-id.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYzIxMzI1OWMyNWJiNmQxMjdhNDA1Y2UyNDUxZDQ2YiIsInN1YiI6IjY1NTRhYjZhZWE4NGM3MTA5NmRjZDhhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.U3v4fXFdcGFn9M0xih4Y_mQdTwg1rCD7jhv0rRqmHJQ',\n};\n\nconst urlParams = new URLSearchParams({\n  language: 'en-US',\n});\n\nexport const getTrending = async controller => {\n  const response = await axios.get(\n    `/trending/all/day?${urlParams.toString()}`,\n    {\n      headers: headers,\n      signal: controller,\n    }\n  );\n\n  return response.data;\n};\n\nexport const getMovieById = async (id, controller) => {\n  const response = await axios.get(`/movie/${id}?${urlParams.toString()}`, {\n    headers: headers,\n    signal: controller,\n  });\n\n  return response.data;\n};\n\nexport const getMovieByIdCast = async (id, controller) => {\n  const response = await axios.get(\n    `/movie/${id}/credits?${urlParams.toString()}`,\n    {\n      headers: headers,\n      signal: controller,\n    }\n  );\n\n  return response.data;\n};\n\nexport const getMovieByIdReviews = async (id, controller) => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?${urlParams.toString()}`,\n    {\n      headers: headers,\n      signal: controller,\n    }\n  );\n\n  return response.data;\n};\n\nexport const searchMovie = async (query, controller) => {\n  urlParams.append('query', query);\n  urlParams.append('include_adult', false);\n  urlParams.append('page', 1);\n\n  const response = await axios.get(`/search/movie?${urlParams.toString()}`, {\n    headers: headers,\n    signal: controller,\n  });\n\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const LoadingContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50% -50%);\n  z-index: 1;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  padding: 1px 10px;\n  background-color: #fff;\n  transition: all 0.2s linear;\n  font-size: 18px;\n  margin-bottom: 40px;\n  display: inline-block;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const MovieContent = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieImg = styled.img`\n  max-width: 300px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  padding: 0;\n  font-weight: 500;\n`;\n\nexport const AdditionalContent = styled.div`\n  padding: 10px;\n  border-top: 1px solid #000;\n  border-bottom: 1px solid #000;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Link, useLocation, useParams } from 'react-router-dom';\nimport {\n  LinkStyled,\n  MovieContent,\n  MovieImg,\n  GenresList,\n  AdditionalContent,\n  AdditionalList,\n} from './movie-id.styled';\nimport { useRef, useState, useEffect } from 'react';\nimport { getMovieById } from 'api';\nimport { LoadingContainer } from 'pages/home/home.styled';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst MovieById = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const controllerRef = useRef();\n  const controllerAbort = () => {\n    if (controllerRef.current) {\n      controllerRef.current.abort();\n    }\n  };\n\n  useEffect(() => {\n    async function fetchMovieById() {\n      controllerAbort();\n\n      controllerRef.current = new AbortController();\n\n      try {\n        setLoading(true);\n        const response = await getMovieById(\n          movieId,\n          controllerRef.current.signal\n        );\n        setMovie(response);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieById();\n\n    return () => controllerAbort();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>Error! Please reload the page!</div>}\n      {loading && (\n        <LoadingContainer>\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        </LoadingContainer>\n      )}\n      <LinkStyled to={backLinkHref} onClick={controllerAbort}>\n        Go back\n      </LinkStyled>\n      {movie !== null && (\n        <>\n          <MovieContent>\n            <MovieImg\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div>\n              <h2>{`${movie.title} (${new Date(\n                movie.release_date\n              ).getFullYear()})`}</h2>\n              <p>{`User Score: ${Math.round(movie.vote_average * 10)}%`}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <GenresList>\n                {movie.genres.map(({ id, name }) => {\n                  return <li key={id}>{name}</li>;\n                })}\n              </GenresList>\n            </div>\n          </MovieContent>\n          <AdditionalContent>\n            <p>Additional information</p>\n            <AdditionalList>\n              <li>\n                <Link to=\"cast\" state={{ from: backLinkHref }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                  Reviews\n                </Link>\n              </li>\n            </AdditionalList>\n          </AdditionalContent>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieById;\n"],"names":["axios","headers","accept","Authorization","urlParams","URLSearchParams","language","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","controller","response","_context","prev","next","concat","toString","signal","sent","abrupt","data","stop","_x","apply","arguments","getMovieById","_ref2","_callee2","id","_context2","_x2","_x3","getMovieByIdCast","_ref3","_callee3","_context3","_x4","_x5","getMovieByIdReviews","_ref4","_callee4","_context4","_x6","_x7","searchMovie","_ref5","_callee5","query","_context5","append","_x8","_x9","LoadingContainer","styled","_templateObject","_taggedTemplateLiteral","LinkStyled","Link","MovieContent","_templateObject2","MovieImg","_templateObject3","GenresList","_templateObject4","AdditionalContent","_templateObject5","AdditionalList","_templateObject6","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","movieId","useParams","backLinkHref","useLocation","state","from","controllerRef","useRef","controllerAbort","current","abort","useEffect","_fetchMovieById","AbortController","t0","code","finish","fetchMovieById","_jsxs","_Fragment","children","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","to","onClick","src","poster_path","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","name"],"sourceRoot":""}