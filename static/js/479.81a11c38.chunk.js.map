{"version":3,"file":"static/js/479.81a11c38.chunk.js","mappings":"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","sources":["api.js","components/trendings-list/trendings-list.styled.js","components/trendings-list/trendings-list.jsx","pages/home/home.styled.js","pages/home/home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYzIxMzI1OWMyNWJiNmQxMjdhNDA1Y2UyNDUxZDQ2YiIsInN1YiI6IjY1NTRhYjZhZWE4NGM3MTA5NmRjZDhhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.U3v4fXFdcGFn9M0xih4Y_mQdTwg1rCD7jhv0rRqmHJQ',\n};\n\nexport const getTrending = async controller => {\n  const params = {\n    language: 'en-US',\n  };\n  const urlParams = new URLSearchParams(params);\n  const response = await axios.get(\n    `/trending/all/day?${urlParams.toString()}`,\n    {\n      headers: headers,\n      signal: controller,\n    }\n  );\n\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  display: block;\n  height: 100%;\n`;\n\nexport const TrendingImg = styled.img`\n  object-fit: cover;\n  height: 100%;\n`;\n\nexport const TitleBlock = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  padding: 10px;\n  backdrop-filter: blur(15px);\n  transition: all 0.2s linear;\n`;\n\nexport const LinkStyled = styled(Link)`\n  height: 100%;\n  display: block;\n  position: relative;\n  overflow: hidden;\n\n  ${TitleBlock} {\n    transform: translateY(-100%);\n  }\n\n  &:hover ${TitleBlock} {\n    transform: translateY(0);\n  }\n`;\n\nexport const Title = styled.p`\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 600;\n  text-shadow: 0px 0px 10px rgba(0, 0, 0, 1);\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  List,\n  Item,\n  TrendingImg,\n  LinkStyled,\n  TitleBlock,\n  Title,\n} from './trendings-list.styled';\n\nexport const TrendingList = ({ list }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {list.map(({ original_title, name, id, poster_path }) => {\n        return (\n          <Item key={id}>\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n              <TrendingImg\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt=\"\"\n              />\n              <TitleBlock>\n                <Title>{original_title || name}</Title>\n              </TitleBlock>\n            </LinkStyled>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoadingContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50% -50%);\n  z-index: 1;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { getTrending } from 'api';\nimport { TrendingList } from 'components/trendings-list/trendings-list';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { LoadingContainer } from './home.styled';\n\nconst HomePage = () => {\n  const [trendings, setTrendings] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const controllerRef = useRef();\n\n  useEffect(() => {\n    async function fetchTrending() {\n      if (controllerRef.current) {\n        controllerRef.current.abort();\n      }\n      controllerRef.current = new AbortController();\n\n      try {\n        setLoading(true);\n        const response = await getTrending(controllerRef.current.signal);\n        setTrendings(response.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTrending();\n  }, []);\n\n  return error ? (\n    <div>Error! Please reload the page!</div>\n  ) : (\n    <>\n      <h2>Tranding today</h2>\n      {loading && (\n        <LoadingContainer>\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        </LoadingContainer>\n      )}\n      <TrendingList list={trendings} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","headers","accept","Authorization","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","controller","urlParams","response","_context","prev","next","URLSearchParams","language","concat","toString","signal","sent","abrupt","data","stop","_x","apply","arguments","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","TrendingImg","_templateObject3","TitleBlock","_templateObject4","LinkStyled","Link","_templateObject5","Title","_templateObject6","TrendingList","list","location","useLocation","_jsx","children","map","_ref2","original_title","name","id","poster_path","_jsxs","to","state","from","src","alt","LoadingContainer","_useState","useState","_useState2","_slicedToArray","trendings","setTrendings","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","controllerRef","useRef","useEffect","_fetchTrending","current","abort","AbortController","results","t0","code","finish","fetchTrending","_Fragment","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}